generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Host {
  id             String     @id @default(uuid())
  username       String     @unique
  password       String
  name           String
  email          String     
  phoneNumber    String
  profilePicture String
  aboutMe        String
  //relation
  properties     Property[]
}

model Property {
  id            String            @id @default(uuid())
  hostId        String
  title         String
  description   String
  location      String
  pricePerNight Float
  bedroomCount  Int
  bathRoomCount Int
  maxGuestCount Int
  rating        Float
  //relations
  bookings      Booking[]
  amenities     PropertyAmenity[]
  reviews       Review[]
  
  host          Host              @relation(fields: [hostId], references: [id], onDelete: Cascade)
}

model Amenity {
  id         String            @id @default(uuid())
  name       String
  //relation
  properties PropertyAmenity[]
}

model PropertyAmenity {
  propertyId String
  amenityId  String

  amenity    Amenity  @relation(fields: [amenityId], references: [id])
  property   Property @relation(fields: [propertyId], references: [id])

  @@id([propertyId, amenityId])
}

model Booking {
  id             String   @id @default(uuid())
  userId         String
  propertyId     String
  checkinDate    DateTime
  checkoutDate   DateTime
  numberOfGuests Int
  totalPrice     Float
  bookingStatus  String

  property       Property @relation(fields: [propertyId], references: [id], onDelete: Cascade)
  user           User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Review {
  id         String   @id @default(uuid())
  userId     String
  propertyId String
  rating     Int
  comment    String

  property   Property @relation(fields: [propertyId], references: [id], onDelete: Cascade)
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id             String    @id @default(uuid())
  username       String    @unique
  password       String
  name           String
  email          String    
  phoneNumber    String
  profilePicture String
  //relations
  bookings       Booking[]
  reviews        Review[]
}